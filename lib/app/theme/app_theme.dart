import 'package:flutter/material.dart';

class AppTheme {
  static ThemeData lightTheme(ColorScheme? dynamicColorScheme) {
    final colorScheme = dynamicColorScheme ?? _defaultLightColorScheme;
    
    return ThemeData(
      useMaterial3: true,
      colorScheme: colorScheme,
      brightness: Brightness.light,
      appBarTheme: AppBarTheme(
        centerTitle: false,
        backgroundColor: colorScheme.primaryContainer,
        foregroundColor: colorScheme.onPrimaryContainer,
        elevation: 0,
      ),
      cardTheme: CardTheme(
        elevation: 2,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(16),
        ),
      ),
      navigationBarTheme: NavigationBarThemeData(
        indicatorColor: colorScheme.primaryContainer,
        labelBehavior: NavigationDestinationLabelBehavior.onlyShowSelected,
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: colorScheme.primary,
        foregroundColor: colorScheme.onPrimary,
      ),
    );
  }

  static ThemeData darkTheme(ColorScheme? dynamicColorScheme) {
    final colorScheme = dynamicColorScheme ?? _defaultDarkColorScheme;
    
    return ThemeData(
      useMaterial3: true,
      colorScheme: colorScheme,
      brightness: Brightness.dark,
      appBarTheme: AppBarTheme(
        centerTitle: false,
        backgroundColor: colorScheme.primaryContainer,
        foregroundColor: colorScheme.onPrimaryContainer,
        elevation: 0,
      ),
      cardTheme: CardTheme(
        elevation: 2,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(16),
        ),
      ),
      navigationBarTheme: NavigationBarThemeData(
        indicatorColor: colorScheme.primaryContainer,
        labelBehavior: NavigationDestinationLabelBehavior.onlyShowSelected,
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: colorScheme.primary,
        foregroundColor: colorScheme.onPrimary,
      ),
    );
  }

  static const _defaultLightColorScheme = ColorScheme(
    brightness: Brightness.light,
    primary: Color(0xFF006A67),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFF71F7F1),
    onPrimaryContainer: Color(0xFF00201F),
    secondary: Color(0xFF4A6362),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFFCCE8E7),
    onSecondaryContainer: Color(0xFF051F1F),
    tertiary: Color(0xFF48617A),
    onTertiary: Color(0xFFFFFFFF),
    tertiaryContainer: Color(0xFFD0E4FF),
    onTertiaryContainer: Color(0xFF001D35),
    error: Color(0xFFBA1A1A),
    errorContainer: Color(0xFFFFDAD6),
    onError: Color(0xFFFFFFFF),
    onErrorContainer: Color(0xFF410002),
    background: Color(0xFFFAFDFC),
    onBackground: Color(0xFF191C1C),
    surface: Color(0xFFFAFDFC),
    onSurface: Color(0xFF191C1C),
    surfaceVariant: Color(0xFFDAE5E3),
    onSurfaceVariant: Color(0xFF3F4948),
    outline: Color(0xFF6F7978),
    onInverseSurface: Color(0xFFEFF1F0),
    inverseSurface: Color(0xFF2D3131),
    inversePrimary: Color(0xFF4EDAD5),
    shadow: Color(0xFF000000),
    surfaceTint: Color(0xFF006A67),
  );

  static const _defaultDarkColorScheme = ColorScheme(
    brightness: Brightness.dark,
    primary: Color(0xFF4EDAD5),
    onPrimary: Color(0xFF003735),
    primaryContainer: Color(0xFF00504D),
    onPrimaryContainer: Color(0xFF71F7F1),
    secondary: Color(0xFFB0CCCB),
    onSecondary: Color(0xFF1C3534),
    secondaryContainer: Color(0xFF324B4A),
    onSecondaryContainer: Color(0xFFCCE8E7),
    tertiary: Color(0xFFB1C8E8),
    onTertiary: Color(0xFF1A324B),
    tertiaryContainer: Color(0xFF304862),
    onTertiaryContainer: Color(0xFFD0E4FF),
    error: Color(0xFFFFB4AB),
    errorContainer: Color(0xFF93000A),
    onError: Color(0xFF690005),
    onErrorContainer: Color(0xFFFFDAD6),
    background: Color(0xFF191C1C),
    onBackground: Color(0xFFE0E3E2),
    surface: Color(0xFF191C1C),
    onSurface: Color(0xFFE0E3E2),
    surfaceVariant: Color(0xFF3F4948),
    onSurfaceVariant: Color(0xFFBEC9C7),
    outline: Color(0xFF889392),
    onInverseSurface: Color(0xFF191C1C),
    inverseSurface: Color(0xFFE0E3E2),
    inversePrimary: Color(0xFF006A67),
    shadow: Color(0xFF000000),
    surfaceTint: Color(0xFF4EDAD5),
  );

  static final List<ColorScheme> presetColorSchemes = [
    _defaultLightColorScheme,
    const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF6750A4),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFE9DDFF),
      onPrimaryContainer: Color(0xFF22005D),
      secondary: Color(0xFF625B71),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFE8DEF8),
      onSecondaryContainer: Color(0xFF1E192B),
      tertiary: Color(0xFF7E5260),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFFFD9E3),
      onTertiaryContainer: Color(0xFF31101D),
      error: Color(0xFFBA1A1A),
      errorContainer: Color(0xFFFFDAD6),
      onError: Color(0xFFFFFFFF),
      onErrorContainer: Color(0xFF410002),
      background: Color(0xFFFFFBFF),
      onBackground: Color(0xFF1C1B1E),
      surface: Color(0xFFFFFBFF),
      onSurface: Color(0xFF1C1B1E),
      surfaceVariant: Color(0xFFE7E0EB),
      onSurfaceVariant: Color(0xFF49454E),
      outline: Color(0xFF7A757F),
      onInverseSurface: Color(0xFFF4EFF4),
      inverseSurface: Color(0xFF313033),
      inversePrimary: Color(0xFFCFBCFF),
      shadow: Color(0xFF000000),
      surfaceTint: Color(0xFF6750A4),
    ),
    const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF006874),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFF97F0FF),
      onPrimaryContainer: Color(0xFF001F24),
      secondary: Color(0xFF4A6267),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFCDE7EC),
      onSecondaryContainer: Color(0xFF051F23),
      tertiary: Color(0xFF525E7D),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFDAE2FF),
      onTertiaryContainer: Color(0xFF0E1B37),
      error: Color(0xFFBA1A1A),
      errorContainer: Color(0xFFFFDAD6),
      onError: Color(0xFFFFFFFF),
      onErrorContainer: Color(0xFF410002),
      background: Color(0xFFF8FDFF),
      onBackground: Color(0xFF191C1D),
      surface: Color(0xFFF8FDFF),
      onSurface: Color(0xFF191C1D),
      surfaceVariant: Color(0xFFDBE4E6),
      onSurfaceVariant: Color(0xFF3F484A),
      outline: Color(0xFF6F797B),
      onInverseSurface: Color(0xFFEFF1F3),
      inverseSurface: Color(0xFF2E3132),
      inversePrimary: Color(0xFF4FD8EB),
      shadow: Color(0xFF000000),
      surfaceTint: Color(0xFF006874),
    ),
    const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF984700),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFFFDCC1),
      onPrimaryContainer: Color(0xFF321400),
      secondary: Color(0xFF765849),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFFFDBCA),
      onSecondaryContainer: Color(0xFF2B160B),
      tertiary: Color(0xFF606133),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFE6E6AB),
      onTertiaryContainer: Color(0xFF1D1E00),
      error: Color(0xFFBA1A1A),
      errorContainer: Color(0xFFFFDAD6),
      onError: Color(0xFFFFFFFF),
      onErrorContainer: Color(0xFF410002),
      background: Color(0xFFFFFBFF),
      onBackground: Color(0xFF201A17),
      surface: Color(0xFFFFFBFF),
      onSurface: Color(0xFF201A17),
      surfaceVariant: Color(0xFFF3DFD2),
      onSurfaceVariant: Color(0xFF52443B),
      outline: Color(0xFF85736B),
      onInverseSurface: Color(0xFFFBEEE9),
      inverseSurface: Color(0xFF362F2C),
      inversePrimary: Color(0xFFFFB77D),
      shadow: Color(0xFF000000),
      surfaceTint: Color(0xFF984700),
    ),
    const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF006E1C),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFF9AF895),
      onPrimaryContainer: Color(0xFF002204),
      secondary: Color(0xFF526350),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFD4E8D0),
      onSecondaryContainer: Color(0xFF101F10),
      tertiary: Color(0xFF39656B),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFBDEAF1),
      onTertiaryContainer: Color(0xFF001F23),
      error: Color(0xFFBA1A1A),
      errorContainer: Color(0xFFFFDAD6),
      onError: Color(0xFFFFFFFF),
      onErrorContainer: Color(0xFF410002),
      background: Color(0xFFFCFDF6),
      onBackground: Color(0xFF1A1C19),
      surface: Color(0xFFFCFDF6),
      onSurface: Color(0xFF1A1C19),
      surfaceVariant: Color(0xFFDEE5D9),
      onSurfaceVariant: Color(0xFF424940),
      outline: Color(0xFF72796F),
      onInverseSurface: Color(0xFFF0F1EB),
      inverseSurface: Color(0xFF2F312D),
      inversePrimary: Color(0xFF7EDB7B),
      shadow: Color(0xFF000000),
      surfaceTint: Color(0xFF006E1C),
    ),
  ];
}
